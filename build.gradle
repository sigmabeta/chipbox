// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    // This pattern is useful for libraries with multiple modular components.
    ext {
        kotlin_version = '1.4.32'
        realm_version = '5.0.0'
        okhttp_version = '4.2.0'
        retrofit_version = '2.6.1'
        room_version = "2.2.6"
        rxjava_version = "2.2.13"
        rxandroid_version = "2.1.1"
        rxbinding_version = "3.0.0-alpha2"
        mvrx_version = "1.5.1"
        fragment_version = "1.3.3"
        dagger_version = "2.28.3"
        assistedinject_version = "0.5.2"
        stetho_version = "1.5.1"
        viewpager_version = "1.0.0-beta04"
        core_ktx_version = "1.3.2"
        appcompat_version = "1.2.0"
        material_version = "1.4.0-alpha02"
        recycler_version = "1.2.0-alpha04"
        timber_version = "4.7.1"
        junit_version = "4.12"
        espresso_runner_version = "1.3.0-alpha03"
        espresso_core_version = "3.3.0-alpha03"
        picasso_version = "2.71828"
        constraint_version = "2.0.0-beta4"
        threeten_version = "1.2.1"
        photoview_version = "2.0.0"
        firebase_version = "17.2.0"
        crashlytics_version = "2.10.1"
        firebase_perf_version = "19.0.0"
        simplestore_version = "0.0.7"
        leakcanary_version = "2.0-beta-3"
        lifecycle_version = "2.2.0"
        compose_version = "1.0.0-beta05"
        coil_version = "1.2.1"
    }

    repositories {
        jcenter()
        google()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.0-alpha15'

        // Allows gradle files to be able to build Kotlin.
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // Realm database plugin.
        classpath "io.realm:realm-gradle-plugin:$realm_version"
    }
}

allprojects {
    repositories {
        jcenter()
        google()
    }
}

project.ext.preDexLibs = !project.hasProperty('disablePreDex')

subprojects {
    project.plugins.whenPluginAdded { plugin ->
        if ("com.android.build.gradle.AppPlugin".equals(plugin.class.name)) {
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
        } else if ("com.android.build.gradle.LibraryPlugin".equals(plugin.class.name)) {
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
        }
    }
}
