version: 2

jobs:
  build:
    docker:
    - image: circleci/android:api-27
    - image: circleci/openjdk:8-jdk

    environment:
      JVM_OPTS: -Xmx3200m

    steps:
    - checkout
    - run:
        name: Set PATH
        command: echo 'export PATH=$PATH:$ANDROID_NDK' >> $BASH_ENV
    - run:
        name: Set ANDROID_NDK
        command: echo 'export ANDROID_NDK=$HOME/android-ndk-r19c' >> $BASH_ENV
    - run:
        name: Set ANDROID_NDK_HOME
        command: echo 'export ANDROID_NDK_HOME=$ANDROID_NDK' >> $BASH_ENV
    - restore_cache:
        key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
    - restore_cache:
        key: ndk-bundle
    - run:
          name: Set up NDK 19c
          command: if [[ ! -e ~/android-ndk-r19c ]]; then wget https://dl.google.com/android/repository/android-ndk-r19c-linux-x86_64.zip && unzip -d ~ android-ndk-r19c-linux-x86_64.zip; fi
    - save_cache:
          key: ndk-bundle
          paths:
          - ~/android-ndk-r19c
    - run:
        name: Set Environment Vars
        command: echo apiSecret=$FABRIC_SECRET > app/fabric.properties && echo ndk.dir=$ANDROID_NDK > local.properties
    - run:
        name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
        command: sudo chmod +x ./gradlew
    - run:
        name: Download Dependencies
        command: ./gradlew androidDependencies
    - save_cache:
        key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
        paths:
        - ~/.gradle
    - run:
        name: Get all Git tags
        command: git fetch --tags
    - run:
        name: Build App Remastered
        command: ./gradlew app-remaster:assembleRelease -PdisablePreDex
    - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
        path: app/build/outputs/
        destination: artifacts